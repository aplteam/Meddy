:Class KeyCodes
⍝ The instance method `GetKeyCodeFor` translates a `keystroke` into the key code.
⍝ The method recognizes all ASCII alphabetically chars, all numbers and all standard keys
⍝ like Ins, Del, Home, End, PgUp, PdDn, CursorRight,...\\
⍝ The key may be combined with one or more a modifiers:\\
⍝ Shift=1, Ctrl=2, Shift+Ctrl=3, Alt=4, Shift+Alt=5, Ctrl+Alt=6, Ctrl+Shift+Alt=7.\\
⍝ Examples:
⍝ ~~~
⍝ KC←⎕NEW KeyCodes
⍝ KC.GetKeyCodeFor¨ 'a' '1' '+' 'A' 'Ctrl++' 'Ctrl+p' 'Ctrl+Alt+S' 'F1' 'F12'
⍝ ~~~
⍝ The argument is not case sensitive. Invalid keystrokes let `KeyStroke` throw an error.
⍝ All names are taken from what they create without a modifier.\\
⍝ Access the read-only property `allKeys` for a list of all valid names.
⍝ Alternatively use shared method `List` to list all names with their values.\\
⍝ Note two specialties: On the NumBlock, the asterisk and "plus" have their
⍝ own independent keycodes while slash, minus and <Enter> don't.\\
⍝ Kai Jaeger ⋄ APL Team Ltd\\

    :Include ##.APLTreeUtils
    :Include APLGuiUtils

    ⎕IO←0 ⋄ ⎕ML←3

    :Property  allKeys
    :Access Public
        ∇ r←get
          r←_allKeys
        ∇
    :EndProperty


    ∇ make0
      :Implements Constructor
      :Access Public Instance
      _allKeys←CreateNames
    ∇

    ∇ r←GetKeyCodeFor keystroke;possibleModifiers;mod;modifier
      :Access Public Instance
      keystroke←,Lowercase keystroke
      :If '+'∊keystroke
      :AndIf 1<⍴keystroke
          :If '++'≡¯2↑keystroke     ⍝ Special case?!
              modifier←¯2↓keystroke
              keystroke←,'+'
          :Else
              (modifier keystroke)←¯1 0↓¨'+'SplitPath keystroke
          :EndIf
          :If '+'∊modifier
              modifier←'+'Split modifier
          :EndIf
      :Else
          modifier←''
      :EndIf
      modifier←,{((≡⍵)∊0 1):⊂⍵ ⋄ ⍵}modifier
      possibleModifiers←GetModifierNames
      'Invalid modifier'⎕SIGNAL APLGuiError/⍨∨/~modifier∊possibleModifiers
      mod←+/GetModifierValues[possibleModifiers⍳modifier]
      :If 'f'=↑keystroke                        ⍝ If it is a ...
      :AndIf 1<⍴,keystroke                      ⍝ ... function key then we want to ...
          keystroke←'f',¯2↑'00',1↓keystroke     ⍝ ... transfer f1 to f01!
      :EndIf
      r←(keystroke{((,¨0⊃⍵)⍳⊂,⍺)⊃1⊃⍵}_allKeys),mod
    ∇

    ∇ R←ListKeys
    ⍝ Returns a matrix with two columns:
    ⍝ | Column | Meaning
    ⍝ |-|-
    ⍝ | [;1] | All names
    ⍝ | [;2] | Their key code
      :Access Public Shared
      R←CreateNames
      R.({⍵,⍪⍎¨⍵}⎕NL-2)
    ∇

    ∇ R←ListModifiers
    ⍝ Returns a matrix with two columns:
    ⍝ | Column | Meaning
    ⍝ |-|-
    ⍝ | [;1] | All modifier names
    ⍝ | [;2] | Their value
      :Access Public Shared
      R←GetModifierValues,⍪GetModifierNames
    ∇

    ∇ r←CreateNames
      r←''

      r,←⊂'enter' 13
      r,←⊂'escape' 27
      r,←⊂'backspace' 8
      r,←⊂'tab' 9
      r,←⊂'space' 32
      r,←⊂'contextmenuhotkey' 93

      r,←⊂'ins' 45
      r,←⊂'home' 36
      r,←⊂'pgup' 33
      r,←⊂'del' 46
      r,←⊂'end' 35
      r,←⊂'pgdn' 34

      r,←⊂'left' 37
      r,←⊂'right' 39
      r,←⊂'up' 38
      r,←⊂'down' 40

      r,←⊂'cursorright' 39
      r,←⊂'cursorleft' 37
      r,←⊂'cursordown' 40
      r,←⊂'cursorup' 38

      r,←⊂'f01' 112
      r,←⊂'f02' 113
      r,←⊂'f03' 114
      r,←⊂'f04' 115
      r,←⊂'f05' 116
      r,←⊂'f06' 117
      r,←⊂'f07' 118
      r,←⊂'f08' 119
      r,←⊂'f09' 120
      r,←⊂'f10' 121
      r,←⊂'f11' 122
      r,←⊂'f12' 123

      r,←⊂'a' 65
      r,←⊂'b' 66
      r,←⊂'c' 67
      r,←⊂'d' 68
      r,←⊂'e' 69
      r,←⊂'f' 70
      r,←⊂'g' 71
      r,←⊂'h' 72
      r,←⊂'i' 73
      r,←⊂'j' 74
      r,←⊂'k' 75
      r,←⊂'l' 76
      r,←⊂'m' 77
      r,←⊂'n' 78
      r,←⊂'o' 79
      r,←⊂'p' 80
      r,←⊂'q' 81
      r,←⊂'r' 82
      r,←⊂'s' 83
      r,←⊂'t' 84
      r,←⊂'u' 85
      r,←⊂'v' 86
      r,←⊂'w' 87
      r,←⊂'x' 88
      r,←⊂'y' 89
      r,←⊂'z' 90

      r,←⊂'0' 48
      r,←⊂'1' 49
      r,←⊂'2' 50
      r,←⊂'3' 51
      r,←⊂'4' 52
      r,←⊂'5' 53
      r,←⊂'6' 54
      r,←⊂'7' 55
      r,←⊂'8' 56
      r,←⊂'9' 57

      r,←⊂'-' 189
      r,←⊂'+' 107
      r,←⊂'*' 106
      r,←⊂'/' 191
      r,←⊂'\' 220
      r,←⊂'=' 187
      r,←⊂',' 188
      r,←⊂'.' 190
      r,←⊂';' 186
      r,←⊂'#' 222
      r,←⊂'[' 219
      r,←⊂']' 221
      r,←⊂'`' 223

      r←↓⍉⊃r
      (0⊃r)←,¨(0⊃r)
    ∇

    ∇ r←GetModifierNames
      r←'' 'shift' 'ctrl' 'alt'
    ∇

    ∇ r←GetModifierValues
      r←0 1 2 4
    ∇

:EndClass
