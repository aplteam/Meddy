# Notepad

## Overview

This class creates an instance of an editor represented by an `n` namespace.
The class can also be used as a browser.

The class is quite flexible and that comes with some complexity. However, there are modal cover functions available that
cover many scenarios and can be taken as blue prints for tailor-made functions.

## Modal cover functions

In general there are two different ways to use the `Notepad` class: as an editor or as a browser (readOnly). This is
reflected by the names of the cover functions which start with either `Edit`\* or `Browse`\*.

There are also two different cover functions for either editing/browsing a variable in the workspace (`Edit and `Browse)
or a file (`EditFile` and `BrowseFile`).

## The parameter "APLMode"

This parameter tells `Notepad` to act as a code editor, in particular regarding the font: "APL385 Unicode" becomes the default
font with "Verdana" being the second choice. The background colour becomes black and the foreground color yellow.

## Undo / Redo

## More

→[*.Notepad.Details |Details are available] but normally you only have to worry about them when you are forced to write your own
cover function for `Notepad`.

For implementation details execute:

~~~
]ADOC.Browse #.GUI.Notepad
~~~

What is →[*.ADOC]?
