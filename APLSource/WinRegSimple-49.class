:Class WinRegSimple
⍝ Offers the methods `Read`, `Write` and `Delete` for dealing with the Windows Registry.\\
⍝ It does not support any other methods, and it never will.
⍝ It also supports only a limited number of data types: `REG_SZ` and `REG_DWORD`.\\
⍝ For a more powerful class for dealing with the Windows Registry see the `WinReg` class.\\
⍝ Kai Jaeger --- APL Team Ltd\\
⍝ Author: Kai Jaeger ⋄ APL Team Ltd ⋄ <http://aplteam.com>\\
⍝ Homepage: <http://aplwiki.com/WinReg>

    ⎕ML←1 ⋄    ⎕IO←1
    :Include APLTreeUtils

    ∇ R←Version
      :Access Public Shared
      R←(Last⍕⎕THIS)'1.0.0' '2017-06-24'
    ∇

    ∇ History
      :Access Public Shared
      ⍝ * 1.0.0
      ⍝   * Very first version.
    ∇

    ∇ r←{default}Read key;wsh
    ⍝ Read a value from the Windows Registry.\\
    ⍝ In case `key` does not exist but `default` was specified `r` becomes `default`.
    ⍝ Otherwise an error 11 is thrown.\\
    ⍝ Note that you can read the default value; for that `key` has to have a trailing backslash.\\
      :Access Public Shared
      'wsh'⎕WC'OLEClient' 'WScript.Shell'
      :Trap 11
          r←wsh.RegRead⊂key
      :Else
          :If 0<⎕NC'default'
              :If ∨/'Invalid root in registry key'⍷⎕DMX.Message
              :OrIf ∨/'Unable to open registry key'⍷⎕DMX.Message
                  r←default
              :Else
                  ⎕DMX.Message ⎕SIGNAL 11
              :EndIf
          :Else
              ⎕DMX.Message ⎕SIGNAL 11
          :EndIf
      :EndTrap
    ∇

    ∇ {r}←Write(key data);wsh;type;isNumeric
    ⍝ Write a value to the Windows Registry. If the value does not yet exist it will be created.\\
    ⍝ Note that you can write the default value; for that `key` has to have a trailing backslash.\\
    ⍝ If `data` is a text vector it will be written as REG_SZ. If it is an integer it will be written
    ⍝ as REG_DWORD. Note that if it is an integer then it must be a one-item vector or a scalar.
      :Access Public Shared
      'Invalid data (depth)'⎕SIGNAL 11/⍨~(≡data)∊0 1
      'Invalid data (rank)'⎕SIGNAL 11/⍨~(⍴⍴data)∊0 1
      :If isNumeric←⊃0=1↑0⍴data
      :AndIf data≠⌊data
          'Invalid data (rank)'⎕SIGNAL 11/⍨1≠⍴⍴data
      :EndIf
      type←(1+isNumeric)⊃'REG_SZ' 'REG_DWORD'
      r←0
      'wsh'⎕WC'OLEClient' 'WScript.Shell'
      wsh.RegWrite key(⊃⍣isNumeric⊣data)type
    ∇

    ∇ {r}←Delete key
    ⍝ Delete a key. Not that a key can only be deleted when there are no sub keys.
    ⍝ In case of success a 1 is returned. In case `key` does not exist or is not empty a 0 is returned.
    ⍝ If the function fails for other reasons then an error is signalled.
      :Access Public Shared
      r←1
      'wsh'⎕WC'OLEClient' 'WScript.Shell'
      :Trap 11
          wsh.RegDelete⊂key
      :Else
          :If ∨/'Invalid root in registry key'⍷⎕DMX.Message
              r←0
          :ElseIf ∨/'Unable to remove registry key'⍷⎕DMX.Message
              r←0
          :Else
              ⎕DMX.Message ⎕SIGNAL ⎕DMX.EN
          :EndIf
      :EndTrap
    ∇

:EndClass
