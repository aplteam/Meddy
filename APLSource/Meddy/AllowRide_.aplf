 {r}←{waitFlag}AllowRide_ port;rc;args;bool
⍝ If `port` is empty then the command line arguments are checked. If "Ride={number}" is found then "number"
⍝ is taken as the port number.\\
⍝ The optional left argument defaults to 1 menaing that the function will loop in order to give the user the
⍝ opportunity to issue an interrupt in order to take control.\\
⍝ In case the port was defined via the command line this function will set `waitFlag` to 1 no matter what.
 r←⍬
 :If 0=≢port
     args←##.APLTreeUtils.Lowercase⊣2 ⎕NQ #'GetCommandLineArgs'
 :AndIf 0<+/bool←∨/¨'-ride='∘⍷¨args
     port←↑↑(//)⎕VFI(≢'-ride=')↓(bool⍳1)⊃args
     waitFlag←1
 :Else
     waitFlag←{0<⎕NC ⍵:⍎⍵ ⋄ 1}'waitFlag'
 :EndIf
 :If (≢/,¨0 port)∧0<≢port
 :AndIf 0=IsConnectedToRide ⍬
     :If 0=≢##.FilesAndDirs.Dir'conga??_32.dll'
         :If ##.APLTreeUtils.IsDevelopment
             'Conga DLL is missing"'⎕SIGNAL 6
         :Else
             ⎕OFF 106   ⍝ means: "Conga DLL is missing"
         :EndIf
     :Else
         {}3502⌶0
         rc←3502⌶'Serve::',⍕port
         :If rc≠0
             11 ⎕SIGNAL⍨'Ride error when resetting connection string to "',('Serve::',⍕port)'"; RC=',⍕rc
         :EndIf
         rc←3502⌶1
         :If ~rc∊0 ¯1
             :If 64≠rc
                 11 ⎕SIGNAL⍨'Another application seems to use port ',(⍕port),'; RC=',⍕rc
             :Else
                 11 ⎕SIGNAL⍨'Ride error when trying to activate Ride; RC=',⍕rc
             :EndIf
         :EndIf
         {}{_←⎕DL ⍵ ⋄ ∇ ⍵}⍣(⊃waitFlag)⊣1     ⍝ Endless loop that allows us to have a RIDE and wait for an interrupt
     :EndIf
 :EndIf
⍝Done
