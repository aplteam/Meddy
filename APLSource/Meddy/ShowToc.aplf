 n←{row}ShowToc n;toc;depth;diff;invalid;states;allStates;was;now
 row←n.Toc{0<⎕NC ⍵:⍎⍵ ⋄ 0}'row'
 :If 0=≢toc←⊃n.HTML.∆ns.toc
     n.Toc.Items←''
     n.Toc.SelItems←⍬
     n.Toc.Visible←0
     n.Toc.Depth←⍬
     n.Toc.∆Toc←0 4⍴⍬
 :Else
     n.Toc.Items←toc[;1]
     :Trap 0
         n.Toc.Depth←0⌈¯1+1,2{(⍺+1)≥⍵:⍵ ⋄ ⍺+1}/toc[;0] ⍝ Correct any user mistakes, otherwise we get a DOMAIN ERROR.
     :Else
         n.Toc.Depth←(≢toc)⍴0    ⍝ Last resort
     :EndTrap
     allStates←n.Toc GetState¨⍳≢n.Toc.Items
     n.Toc.Depth←n.Toc.((⊃⌈/≢¨(Depth Items))↑Depth)
     was←n.Toc.(↑,[0.5]/Depth Items)
     n.Toc.Items←toc[;1]
     n.Toc.RealDepth←toc[;0]        ⍝ In case the user has built an invalid structure of headers we need to remember his definition
     toc[;0]←toc[;0]-(↑toc[;0])-1
     n.TocSF.(Active Visible)←1
     :If 0=≢allStates
         {}{2 ⎕NQ n.Toc'Expanding'⍵}¨A.Where n.Toc.Depth∊0 1
     :ElseIf ~0=≢was←↓(5⊃¨allStates)⌿was
         now←↓n.Toc.(Depth,[0.5]Items)
     :AndIf ~0=≢was←(was∊now)/was
         n ExpandThese now⍳was
     :EndIf
     toc[;1]←(,¨'“”')⎕R(,¨'""')⊣toc[;1]
     n.Toc.∆Toc←toc
     :If 0≠≢invalid←A.Where 0,2{(⍺+1)≥⍵:0 ⋄ 1}/toc[;0]
         states←n.Toc GetState¨invalid
         (4⊃¨states)←0                  ⍝ Reset
         :If ~0=≢invalid
             (4⊃¨states)←1              ⍝ Make invalid bold
         :EndIf
         {}n.Toc SetState¨invalid,¨⊂¨states
     :EndIf
     n.Toc.SelItems[row⌊¯1+≢n.Toc.SelItems]←1
     n.Toc.Visible←1
 :EndIf
 SyncWithTocAndPreview n
⍝Done
